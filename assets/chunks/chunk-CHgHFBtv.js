import{a as c,u as g,c as m,d,e as k,j as o,b as j,p,R as L}from"./chunk-DXIR04UW.js";import{p as u}from"./chunk-DWElet6Q.js";function T(n){n=n.toLowerCase(),n=P(n);const t=n.split(/[^a-z0-9\u4E00-\u9FA5]+/).filter(Boolean).join("-");return t===""?null:t}function P(n){return n.normalize("NFD").replace(/[\u0300-\u036f]/g,"")}function F(n){return c(n.includes("#"),{urlWithHash:n}),n.split("#")[1].split("-").map((e,i)=>i===0?b(e):e).join(" ")}function b(n){return n[0].toUpperCase()+n.slice(1)}function H({href:n,text:t,noBreadcrumb:s,doNotInferSectionTitle:e,children:i}){const r=g();if(m(n.startsWith("/")||n.startsWith("#"),`<Link href /> prop \`href==='${n}'\` but should start with '/' or '#'`),m(!t||!i,"Cannot use both `text` or `children`"),d(!t,"prop `text` is deprecated"),t=t??i,k(n))return o.jsx(j,{path:n,text:t});{const a=R(n,r,e);return a?t||(t=D({noBreadcrumb:s,...a})):t="LINK-TARGET-NOT-FOUND",o.jsx("a",{href:n,children:t})}}function D({noBreadcrumb:n,linkData:t,sectionTitle:s,isLinkOnSamePage:e}){const i=[];return t.linkBreadcrumb&&i.push(...(t.linkBreadcrumb??[]).slice().reverse().map(p)),i.push(p(t.title)),s&&i.push(s),n||e?i[i.length-1]:o.jsx(o.Fragment,{children:i.map((r,a)=>{const l=a===0?o.jsx(o.Fragment,{}):" > ";return o.jsxs(L.Fragment,{children:[l,r]},a)})})}function R(n,t,s){const{hrefPathname:e,hrefHash:i}=$(n),r=h(e||t.urlPathname,t);c(r);const a=r.url===t.urlPathname;e||c(a);let l=null;if(i){if(c(!i.startsWith("#")),a){const f=h(`#${i}`,t);if(!f)return null;l=p(f.title)}else"sectionTitles"in r&&r.sectionTitles&&r.sectionTitles.forEach(f=>{T(f)===i&&(l=p(f))});if(!l){if(s)return d(!1,`Page section title not found for <Link href="\`${n}\`" doNotInferSectionTitle={true} />.`),null;l=o.jsx(o.Fragment,{children:F(n)})}}return{linkData:r,sectionTitle:l,isLinkOnSamePage:a}}function h(n,t){c(n.startsWith("/")||n.startsWith("#"));const{linksAll:s}=t,e=s.find(({url:i})=>n===i);return n.startsWith("#")?d(e,`Couldn't find ${n} in ${t.urlPathname}, does it exist?`):d(e,[`Couldn't find page with URL ${u.bold(n)}`,"â€” did you define it in",[u.cyan("docpress.config.js"),u.dim("#{"),u.cyan("headings"),u.dim(","),u.cyan("headingsDetached"),u.dim("}"),"?"].join("")].join(" ")),e??null}function $(n){let t=null,s=null;if(!n.includes("#"))s=n;else{const[e,...i]=n.split("#");e&&(s=e),t=i.join("#")}return c(s!==null||t!==null),c(s||t),{hrefPathname:s,hrefHash:t}}export{H as L};
