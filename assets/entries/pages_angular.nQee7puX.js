import{j as e,L as i,o as r}from"../chunks/chunk-2vDHsprH.js";import"../chunks/chunk-u42NeO_H.js";/* empty css                      *//* empty css                      *//* empty css                      */import{E as n}from"../chunks/chunk-DawB4P_P.js";/* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      */const l=[];function o(a){const t={a:"a",code:"code",li:"li",p:"p",ul:"ul",...a.components};return e.jsxs(e.Fragment,{children:[e.jsxs(t.p,{children:["There is a ",e.jsxs(t.a,{href:"https://github.com/vikejs/vike-angular",children:["draft for a Vike extension ",e.jsx(t.code,{children:"vike-angular"})]}),": contributions welcome to finish its development."]}),`
`,e.jsxs(t.p,{children:["Examples of manually integrating ",e.jsx(t.a,{href:"https://angular.io/",children:"Angular"}),":"]}),`
`,e.jsxs(t.ul,{children:[`
`,e.jsxs(t.li,{children:[e.jsx(n,{timestamp:"2023.12",repo:"nitedani/vite-plugin-angular"})," > ",e.jsx(t.code,{children:"examples/"})]}),`
`]})]})}function d(a={}){const{wrapper:t}=a.components||{};return t?e.jsx(t,{...a,children:e.jsx(o,{...a})}):o(a)}const s=Object.freeze(Object.defineProperty({__proto__:null,default:d,pageSectionsExport:l},Symbol.toStringTag,{value:"Module"})),g={isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:{server:!0}}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},Layout:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/Layout",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:i}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/renderer/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:r}},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/angular/+Page.mdx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:s}}};export{g as configValuesSerialized};
