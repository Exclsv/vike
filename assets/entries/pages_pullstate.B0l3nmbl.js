import{j as e,L as l,o as a}from"../chunks/chunk-2vDHsprH.js";import{L as r}from"../chunks/chunk-C89OkL-F.js";/* empty css                      */import{C as n}from"../chunks/chunk-BlRpBXxk.js";/* empty css                      *//* empty css                      *//* empty css                      */import"../chunks/chunk-u42NeO_H.js";/* empty css                      *//* empty css                      */const s=[];function i(o){const t={a:"a",li:"li",p:"p",ul:"ul",...o.components};return e.jsxs(e.Fragment,{children:[e.jsxs(t.p,{children:["You can use Vike with ",e.jsx(t.a,{href:"https://github.com/lostpebble/pullstate",children:"PullState"}),"."]}),`
`,e.jsx(n,{children:e.jsxs(t.p,{children:["There isn't a ",e.jsx(r,{href:"/extensions",children:"Vike extension"})," for PullState yet, but ",e.jsx(t.a,{href:"https://github.com/vikejs/vike/issues/1715",children:"contributions welcome to create one"}),"."]})}),`
`,e.jsx(t.p,{children:"To manually integrate PullState, see:"}),`
`,e.jsxs(t.ul,{children:[`
`,e.jsxs(t.li,{children:[`
`,e.jsx(r,{href:"/stores#ssr",doNotInferSectionTitle:!0}),`
`]}),`
`,e.jsx(t.li,{children:e.jsx(t.a,{href:"https://lostpebble.github.io/pullstate/docs/quick-example-server-rendered",children:"PullState > SSR Example"})}),`
`]})]})}function d(o={}){const{wrapper:t}=o.components||{};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}const u=Object.freeze(Object.defineProperty({__proto__:null,default:d,pageSectionsExport:s},Symbol.toStringTag,{value:"Module"})),T={isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:{server:!0}}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},Layout:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/Layout",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:l}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/renderer/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:a}},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/pullstate/+Page.mdx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:u}}};export{T as configValuesSerialized};
