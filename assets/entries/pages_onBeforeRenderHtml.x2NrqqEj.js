import{j as e,L as i,o as n,i as d}from"../chunks/chunk-BURd2QqB.js";import{L as r}from"../chunks/chunk-BvJCXD7Y.js";/* empty css                      */import{I as l}from"../chunks/chunk-BEtRqD3y.js";/* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      */import"../chunks/chunk-BKvOB9xx.js";/* empty css                      */import"../chunks/chunk-CCPW8xzl.js";/* empty css                      */const s=[];function a(o){const t={code:"code",p:"p",...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(t.p,{children:"Environment: server."}),`
`,e.jsx(l,{by:e.jsx(r,{href:"/vike-vue",children:e.jsx(t.code,{children:"vike-vue"})}),noCustomGuide:!0,children:e.jsx(t.code,{children:"onBeforeRenderHtml()"})}),`
`,e.jsxs(t.p,{children:["Same as ",e.jsx(r,{href:"/onAfterRenderHtml",children:e.jsx(t.code,{children:"onAfterRenderHtml()"})})," but called right before the ",e.jsx(t.code,{children:"+Page"})," component is rendered to HTML."]})]})}function p(o={}){const{wrapper:t}=o.components||{};return t?e.jsx(t,{...o,children:e.jsx(a,{...o})}):a(o)}const u=Object.freeze(Object.defineProperty({__proto__:null,default:p,pageSectionsExport:s},Symbol.toStringTag,{value:"Module"})),g={isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:{server:!0}}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},Layout:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/Layout",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:i}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/renderer/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:n}},NavHeader:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/+NavHeader.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:d}},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/onBeforeRenderHtml/+Page.mdx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:u}}};export{g as configValuesSerialized};
