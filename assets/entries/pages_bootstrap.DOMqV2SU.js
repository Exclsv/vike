import{j as e,L as a,o as r,i as s}from"../chunks/chunk-CLKMuVP5.js";/* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      */import"../chunks/chunk-Be-9ij3x.js";/* empty css                      */const n=[];function i(o){const t={a:"a",li:"li",p:"p",ul:"ul",...o.components};return e.jsxs(e.Fragment,{children:[e.jsxs(t.p,{children:["Using Vike with ",e.jsx(t.a,{href:"https://getbootstrap.com",children:"Bootstrap"}),"."]}),`
`,e.jsxs(t.p,{children:["See discussion at ",e.jsx(t.a,{href:"https://github.com/vikejs/vike/issues/148",children:'#148 - "document is not defined" when using bootstrap js'}),", most notably following comments:"]}),`
`,e.jsxs(t.ul,{children:[`
`,e.jsx(t.li,{children:e.jsx(t.a,{href:"https://github.com/vikejs/vike/issues/148#issuecomment-923843103",children:"#148 - Comment"})}),`
`,e.jsx(t.li,{children:e.jsx(t.a,{href:"https://github.com/vikejs/vike/issues/148#issuecomment-924852351",children:"#148 - Comment"})}),`
`]})]})}function l(o={}){const{wrapper:t}=o.components||{};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}const d=Object.freeze(Object.defineProperty({__proto__:null,default:l,pageSectionsExport:n},Symbol.toStringTag,{value:"Module"})),x={isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:{server:!0}}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},Layout:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/Layout",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:a}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/renderer/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:r}},NavHeader:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/+NavHeader.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:s}},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/bootstrap/+Page.mdx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:d}}};export{x as configValuesSerialized};
