import{j as e,L as n,o as i}from"../chunks/chunk-BDl3L7LG.js";import{L as a}from"../chunks/chunk-C57YDwx2.js";/* empty css                      *//* empty css                      *//* empty css                      */import{I as d}from"../chunks/chunk-CFYQxlJp.js";/* empty css                      *//* empty css                      */import"../chunks/chunk-u42NeO_H.js";/* empty css                      */import"../chunks/chunk-BqRrYk9k.js";/* empty css                      */const l=[];function r(o){const t={code:"code",p:"p",...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(t.p,{children:"Environment: client."}),`
`,e.jsx(d,{noCustomGuide:!0,children:e.jsx(t.code,{children:"onAfterRenderClient()"})}),`
`,e.jsxs(t.p,{children:["Same as ",e.jsx(a,{href:"/onBeforeRenderClient",children:e.jsx(t.code,{children:"onBeforeRenderClient()"})})," but called after rendering the page on the client-side."]})]})}function s(o={}){const{wrapper:t}=o.components||{};return t?e.jsx(t,{...o,children:e.jsx(r,{...o})}):r(o)}const p=Object.freeze(Object.defineProperty({__proto__:null,default:s,pageSectionsExport:l},Symbol.toStringTag,{value:"Module"})),C={isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:{server:!0}}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},Layout:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/Layout",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:n}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/renderer/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:i}},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/onAfterRenderClient/+Page.mdx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:p}}};export{C as configValuesSerialized};
