import{j as e,L as n,o as r,i as s}from"../chunks/chunk-B9vS3oLs.js";import{L as a}from"../chunks/chunk-CS5SQ6Ne.js";/* empty css                      */import{a as l}from"../chunks/chunk-tE9dPN5P.js";/* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      */import"../chunks/chunk-DMsAw_93.js";/* empty css                      *//* empty css                      *//* empty css                      */const d=[{pageSectionId:"when-to-eject",pageSectionLevel:2,pageSectionTitle:"When to eject?"}];function i(o){const t={a:"a",blockquote:"blockquote",code:"code",p:"p",...o.components};return e.jsxs(e.Fragment,{children:[e.jsxs(t.p,{children:["The ",e.jsx(t.a,{href:"https://github.com/snake-py/eject",children:"eject package"})," enables you to take control of Vike extensions."]}),`
`,e.jsxs(l,{children:["The eject package is ",e.jsx(t.a,{href:"https://github.com/snake-py/eject/issues/7#issuecomment-2480853337",children:"work-in-progress"}),"."]}),`
`,e.jsxs(t.p,{children:["It moves the code of the extension from ",e.jsx(t.code,{children:"/node_modules/vike-some-extension/"})," to your Git repository at ",e.jsx(t.code,{children:"/ejected/vike-some-extension/"}),". This means you can then fully modify the code of ",e.jsx(t.code,{children:"vike-some-extension"}),"."]}),`
`,e.jsxs(t.blockquote,{children:[`
`,e.jsxs(t.p,{children:["The ejected code at ",e.jsx(t.code,{children:"/ejected/vike-some-extension"})," is the built JavaScript, but there is ",e.jsx(t.a,{href:"https://github.com/snake-py/eject/issues/4",children:"work-in-progress"})," for copying the original source code (e.g. TypeScript) from the extension's Git repository (instead of copying ",e.jsx(t.code,{children:"/node_modules/vike-some-extension/"}),")."]}),`
`]}),`
`,e.jsxs(t.blockquote,{children:[`
`,e.jsx(t.p,{children:"Eject also has limited support for other npm packages; Vike extensions are guaranteed to be fully supported."}),`
`]}),`
`,e.jsx("h2",{id:"when-to-eject",children:"When to eject?"}),`
`,e.jsx(t.p,{children:"In general, before considering ejection, we recommend reaching out to the maintainer of the Vike extension and to consider making a Pull Request."}),`
`,e.jsx(t.p,{children:"Only eject as a last resort â€” when it's clear that it's the only option."}),`
`,e.jsxs(t.p,{children:["See also: ",e.jsx(a,{href:"/extension-vs-custom"}),"."]})]})}function c(o={}){const{wrapper:t}=o.components||{};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}const p=Object.freeze(Object.defineProperty({__proto__:null,default:c,pageSectionsExport:d},Symbol.toStringTag,{value:"Module"})),b={isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:{server:!0}}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},Layout:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/Layout",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:n}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/renderer/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:r}},TopNavigation:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/+TopNavigation.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:s}},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/eject/+Page.mdx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:p}}};export{b as configValuesSerialized};
