import{j as e,L as r,o as a}from"../chunks/chunk-BsuEwop9.js";/* empty css                      *//* empty css                      */import"../chunks/chunk-u42NeO_H.js";/* empty css                      */const n=[];function o(i){const t={a:"a",li:"li",p:"p",ul:"ul",...i.components};return e.jsxs(e.Fragment,{children:[e.jsx(t.p,{children:"Vike doesn't include an image optimizer (in order to keep Vike lean), instead you can choose an optimizer library, for example:"}),`
`,e.jsxs(t.ul,{children:[`
`,e.jsx(t.li,{children:e.jsx(t.a,{href:"https://unpic.pics/img/",children:"unpic-img"})}),`
`,e.jsx(t.li,{children:e.jsx(t.a,{href:"https://github.com/nitedani/img-optimizer",children:"img-optimizer"})}),`
`,e.jsx(t.li,{children:e.jsx(t.a,{href:"https://github.com/JonasKruckenberg/imagetools",children:"vite-imagetools"})}),`
`,e.jsx(t.li,{children:e.jsx(t.a,{href:"https://github.com/ElMassimo/vite-plugin-image-presets",children:"vite-plugin-image-presets"})}),`
`]}),`
`,e.jsxs(t.p,{children:["See also ",e.jsx(t.a,{href:"https://github.com/vitejs/awesome-vite",children:"awesome-vite"}),"."]})]})}function l(i={}){const{wrapper:t}=i.components||{};return t?e.jsx(t,{...i,children:e.jsx(o,{...i})}):o(i)}const s=Object.freeze(Object.defineProperty({__proto__:null,default:l,pageSectionsExport:n},Symbol.toStringTag,{value:"Module"})),m={isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:{server:!0}}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},Layout:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/Layout",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:r}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/renderer/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:a}},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/img/+Page.mdx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:s}}};export{m as configValuesSerialized};
